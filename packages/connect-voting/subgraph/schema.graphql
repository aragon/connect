type Vote @entity {
  id: ID!
  orgAddress: Bytes!
  appAddress: Bytes!
  creator: Bytes!
  originalCreator: Bytes!
  metadata: String!
  executed: Boolean!
  executedAt: BigInt!
  startDate: BigInt!
  snapshotBlock: BigInt!
  supportRequiredPct: BigInt!
  minAcceptQuorum: BigInt!
  yea: BigInt!
  nay: BigInt!
  votingPower: BigInt!
  script: String!
  voteNum: BigInt!
  spec: BigInt!
  castVotes: [Cast!] @derivedFrom(field: "vote")
  rewards: [Reward!] @derivedFrom(field: "vote")
  calls: [Call!] @derivedFrom(field: "vote")
}

type Reward @entity {
  id: ID!
  vote: Vote!
  token: Bytes!
  amount: BigInt!
  to: Bytes!
}

type Call @entity {
  id: ID!
  vote: Vote!
  contract: Bytes!
  calldata: Bytes!
}

type Cast @entity {
  id: ID!
  vote: Vote!
  voter: Voter!
  supports: Boolean!
  stake: BigInt!
  createdAt: BigInt!
}

type Voter @entity {
  id: ID!
  address: Bytes!
  castVotes: [Cast!] @derivedFrom(field: "voter")
}

type AragonInfo @entity {
  id: ID!
  orgs: [Bytes!]!
  apps: [Bytes!]!
  tokens: [Bytes!]!
}
