type RegistryFactory @entity {
  "RegistryFactory address"
  id: ID!
  address: Bytes!
  registryCount: Int!
  registries: [Registry!]!
}

type Registry @entity {
  "Registry address"
  id: ID!
  address: Bytes!
  name: String!
  "ENS node"
  node: Bytes!
  repoCount: Int!
  repos: [Repo!]!
  factory: RegistryFactory! @derivedFrom(field: "registries")
}

type Repo @entity {
  "Repo address"
  id: ID!
  address: Bytes!
  name: String!
  "Repo ENS node"
  node: Bytes! #
  versions: [Version!]!
  registry: Registry! @derivedFrom(field: "repos")
  "The number of proxies deployed for the app in this repo"
  appCount: Int!
}

type Version @entity {
  "Concat repo address '-' semanticVersion"
  id: ID!
  "Semver version number"
  semanticVersion: String!
  "App implementation address"
  codeAddress: Bytes!
  "Content URI, ipfs hash or html url"
  contentUri: String!
  repo: Repo! @derivedFrom(field: "versions")
  apps: [App!] @derivedFrom(field: "version")
}

type OrgFactory @entity {
  "OrgFactory address"
  id: ID!
  address: Bytes!
  orgCount: Int!
  organizations: [Organization!]!
}

type Organization @entity {
  "Kernel address"
  id: ID!
  address: Bytes!
  createdAt: BigInt!
  "Acl address"
  acl: Bytes!
  "Address of the recovery Vault instance"
  recoveryVault: Bytes!
  apps: [App!]!
  permissions: [Permission!]!
  factory: OrgFactory! @derivedFrom(field: "organizations")
}

type App @entity {
  "App proxy address"
  id: ID!
  address: Bytes!
  name: String!
  "ENS namehash of the aragonPM repo"
  appId: String!
  "App base implementation entity"
  implementation: Implementation!
  "Whether the app is Forwarder"
  isForwarder: Boolean!
  "Whether the app is upgradeable"
  isUpgradeable: Boolean!
  "Repo Version entity"
  version: Version
  repo: Repo
  roles: [Role!]! @derivedFrom(field: "app")
  organization: Organization! @derivedFrom(field: "apps")
}

type Implementation @entity {
  "Concat namespace '-' appId"
  id: ID! #
  address: Bytes!
}

type Role @entity {
  "Concat app address '-' role hash"
  id: ID!
  "Role ens namehash"
  hash: Bytes!
  "Role manager address"
  manager: Bytes!
  app: App!
  grantees: [Permission!]! @derivedFrom(field: "role")
}

type Permission @entity {
  "Concat of app address '-' role hash '-' grantee address"
  id: ID!
  "Address assigned the permissions"
  granteeAddress: Bytes!
  "Whether the grantee is allowed by the permission"
  allowed: Boolean!
  "List of parameters the permission has"
  params: [Param!]!
  app: App!
  role: Role!
}

type Param @entity {
  "Concat of param hash '-' index"
  id: ID!
  "Argument id (uint8)"
  argumentId: Int!
  "Operation type (uint8)"
  operationType: Int!
  "Argument Value (uint240)"
  argumentValue: BigInt!
}
